#:import webbrowser webbrowser
#:import utils kivy.utils


# ------ custom widget classes ------ #
<WidgetImage>:
    image_work: image_work
    Image:
        pos: root.center_x-self.width/2, root.center_y-self.height/2
        id: image_work
        keep_ratio: False
        allow_stretch: True

<WidgetSpacing@Widget>
    size_hint: None, None
    size: dp(8), 0

<ButtonWithImageAtCenter>:
    image_source: self.image_source
    size_hint: None, None
    size: dp(30), dp(30)
    canvas:
        Rectangle:
            size: self.width-dp(8), self.height-dp(8)
            pos: self.center_x-(self.width-dp(8))/2, self.center_y-(self.height-dp(8))/2
            source: self.image_source

<LabelLayoutWidget@Label>:
    size_hint: None, None
    size: self.texture_size
    pos_hint: {"center_y": 0.5}

<NoMultilineTextInput@TextInput>:
    multiline: False
    cursor_color: 0, 0, 0, 1

<MultilineTextInput@TextInput>:
    cursor_color: 0, 0, 0, 1

<ProceedButton@Button>:
    font_name: "fonts/arial-unicode-ms.ttf"
    markup: True
    text: "[size=40]Proceed[/size] [size=40]\u25B6[/size]"
    size_hint: None, None
    height: dp(45)
    width: dp(260)
    pos_hint: {"center_x": 0.5, "center_y": 0.5}
    background_normal: ''
    background_down: ''
    background_color: (0.133, 0.867, 0.282, 1) if self.state == "normal" else (0.002, 0.654, 0.07, 1)

<LayoutSelectImagePath>:
    #size_hint: 1, 0.1
    pos_hint: {"top": 1}
    #height: dp(30)
    WidgetSpacing:
    LabelLayoutWidget:
        text: root.parent.text_select_image + " : "

    NoMultilineTextInput:
        size_hint: 1, None
        pos_hint: {"center_y": 0.5}
        height: dp(30)
        multiline: False
        text: root.path_to_image
    WidgetSpacing:
    ButtonWithImageAtCenter:
        on_press: root.select_image()
        pos_hint: {"center_y": 0.5}
        image_source: "images/folder_icon.png"


<ControlLayout@BoxLayout>:
    #size_hint: 1, 0.1
    pos_hint: {"top": 1}
    # height: dp(30)

<AppCheckBox@CheckBox>:
    size_hint: None, None
    size: dp(20), dp(20)
    pos_hint: {"center_y": 0.5}
# ------------------------------- #



# ------ this BoxLayout contains all widgets with which you can apply modifications to an image ------ #
<LayoutControlWidget>:
    orientation: "vertical"
    # spacing: dp(8)

    # --- select the image file --- #
    LayoutSelectImagePath:
    # ----------------------------- #

    # --- remove the background --- #
    # select if you want to remove the background
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: root.text_remove_bg + " : "
        AppCheckBox:
            id: bg_remove

    # enter/get your api key (this layout don't appear if you don't want to remove the background)
    ControlLayout:
        size_hint: 1, None
        opacity: 1 if bg_remove.state == "down" else 0
        height: dp(30) if bg_remove.state == "down" else 0
        WidgetSpacing:
        LabelLayoutWidget:
            text: root.text_api_key_remove_bg + " : "
        NoMultilineTextInput:
        WidgetSpacing:
        ButtonWithImageAtCenter:
            image_source: "images/info_icon.png"
            on_press: webbrowser.open("https://www.remove.bg/api")
    # ---------------------------- #

    # --- resize the image --- #
    # select if you want to resize the image
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: root.text_resize + " : "
        AppCheckBox:
            id: resize

    # choose to keep the ratio of the image or not and give the new size (this layout don't appear if you don't
    # want to resize the image)
    ControlLayout:
        size_hint: 1, None
        spacing: dp(10)
        opacity: 1 if resize.state == "down" else 0
        height: dp(97) if resize.state == "down" else 0
        orientation: "vertical"
        BoxLayout:
            WidgetSpacing:
            LabelLayoutWidget:
                text: root.text_resize_keep_ratio + " : "
            AppCheckBox:
                id: keep_ratio
                state: "down" if do_not_keep_ratio.state == "normal" else "normal"
        BoxLayout:
            WidgetSpacing:
            LabelLayoutWidget:
                text: root.text_resize_do_not_keep_ratio + " : "
            AppCheckBox:
                id: do_not_keep_ratio
                state: "down" if keep_ratio.state == "normal" else "normal"
        BoxLayout:
            WidgetSpacing:
            LabelLayoutWidget:
                text: root.text_resize_width + " : "
            NoMultilineTextInput:
                size_hint: None, 1
                width: dp(75)
            WidgetSpacing:
            LabelLayoutWidget:
                text: root.text_resize_height + " : "
            NoMultilineTextInput:
                size_hint: None, 1
                width: dp(75)
    # -------------------------- #

    # --- select if you want to crop the image --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: root.text_crop + " : "
        AppCheckBox:
    # --------------------------------------------------- #

    # --- select if you want to add text to your image and enter text --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: root.add_text + " : "
        AppCheckBox:
            id: add_text

    ControlLayout:
        size_hint: 1, None
        opacity: 1 if add_text.state == "down" else 0
        height: dp(50) if add_text.state == "down" else 0
        WidgetSpacing:
        MultilineTextInput:
    # --------------------------------------------------- #

    # --- select if you want to rotate the image --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: root.rotate_image  #"rotate the image : "
        AppCheckBox:
            id: rotate

    ControlLayout:
        size_hint: 1, None
        opacity: 1 if rotate.state == "down" else 0
        height: dp(30) if rotate.state == "down" else 0
        WidgetSpacing:
        LabelLayoutWidget:
            text: "angle : "
        MultilineTextInput:
            size_hint: None, 1
            width: dp(60)
    # --------------------------------------------- #




    # --- choose the output format --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: "Modify output format (png by default) : "
        AppCheckBox:
            id: image_format

    ControlLayout:
        size_hint: 1, None
        opacity: 1 if image_format.state == "down" else 0
        height: dp(30) if image_format.state == "down" else 0
        #:set spacing dp(12)
        WidgetSpacing:
            width: spacing
        LabelLayoutWidget:
            text: "jpg : "
        AppCheckBox:
        WidgetSpacing:
            width: spacing
        LabelLayoutWidget:
            text: "bmp : "
        AppCheckBox:
        WidgetSpacing:
            width: spacing
        LabelLayoutWidget:
            text: "gif : "
        AppCheckBox:
        WidgetSpacing:
            width: spacing
        LabelLayoutWidget:
            text: "ico : "
        AppCheckBox:
    # -------------------------------- #

    # --- select if you want apply a color overlay --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: "Add color overlay : "
        AppCheckBox:
            id: overlay

    ControlLayout:
        size_hint: 1, None
        opacity: 1 if overlay.state == "down" else 0
        height: dp(30) if overlay.state == "down" else 0
        WidgetSpacing:
        LabelLayoutWidget:
            text: "Color : "
        NoMultilineTextInput:
            size_hint: None, 1
            width: dp(90)
            id: color_code
            text: "#00000000"
        WidgetSpacing:
        Widget:
            id: color_preview
            size_hint: None, 1
            width: self.height
            pos_hint: {"center_y": 0.5}
            canvas.after:
                Color:
                    rgba: utils.get_color_from_hex(color_code.text) if len(color_code.text) > 1 else (0, 0, 0, 1)
                Rectangle:
                    pos: self.pos
                    size: self.size
            Image:
                allow_stretch: True
                keep_ratio: False
                source: "images/image_without_background.jpg"
                size: color_preview.size
                pos: color_preview.pos
    # -------------------------------------------- #

    # --- give the name of the new image --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: "Name of the new image : "
        NoMultilineTextInput:
            size_hint: None, None
            pos_hint: {"center_y": 0.5}
            width: dp(110)
            height: dp(30)
    # -------------------------------------- #

    # --- select the folder in which you want to stock the new image --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: "save image as : "
        NoMultilineTextInput:
            size_hint: 1, None
            pos_hint: {"center_y": 0.5}
            height: dp(30)
        WidgetSpacing:
        ButtonWithImageAtCenter:
            image_source: "images/folder_icon.png"
            pos_hint: {"center_y": 0.5}
    # ------------------------------------------------------------------ #

    # --- add the image to an .exe file --- #
    ControlLayout:
        WidgetSpacing:
        LabelLayoutWidget:
            text: "use image as .exe file icon : "
        AppCheckBox:
            id: exe_icon

    ControlLayout:
        size_hint: 1, None
        opacity: 1 if exe_icon.state == "down" else 0
        height: dp(30) if exe_icon.state == "down" else 0
        WidgetSpacing:
        LabelLayoutWidget:
            text: "Path to exe file : "
        NoMultilineTextInput:
        WidgetSpacing:
        ButtonWithImageAtCenter:
            image_source: "images/folder_icon.png"
    # ------------------------------------- #

    # --- button tu apply modifications to the image --- #
    WidgetSpacing:
        size: 0, dp(15)
    ProceedButton:
    WidgetSpacing:
        size: 0, dp(10)
    # -------------------------------------------------- #
# ------------------------------------------------------------------------ #


# ------ Main view of the image editing part ------ #
<LayoutImageEditing>:
    ScrollView:
        do_scroll_y: True
        do_scroll_x: False
        LayoutControlWidget:
            size_hint: 1, None
            height: dp(820)
    WidgetSpacing:
        size: dp(18), 0
    WidgetImage:
# ------------------------------------------------- #
